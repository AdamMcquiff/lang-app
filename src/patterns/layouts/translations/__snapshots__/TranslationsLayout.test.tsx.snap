// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TranslationLayout renders without crashing with all props 1`] = `
<main
  className="l-translations some class"
>
  <CategoryRow
    category={
      Object {
        "id": 1,
        "title": "Some category",
        Symbol(mobx administration): ObservableObjectAdministration$$1 {
          "defaultEnhancer": [Function],
          "keysAtom": Atom$$1 {
            "diffValue": 0,
            "isBeingObserved": false,
            "isPendingUnobservation": false,
            "lastAccessedBy": 0,
            "lowestObserverState": 2,
            "name": "TranslationCategoryStore@2.translationCategories[..].keys",
            "observers": Set {},
          },
          "name": "TranslationCategoryStore@2.translationCategories[..]",
          "pendingKeys": Map {
            "cheerio" => false,
            "$$typeof" => false,
            "nodeType" => false,
            "@@__IMMUTABLE_ITERABLE__@@" => false,
            "@@__IMMUTABLE_RECORD__@@" => false,
            "_isMockFunction" => false,
            "toJSON" => false,
          },
          "proxy": [Circular],
          "target": Object {
            "id": 1,
            "title": "Some category",
            Symbol(mobx administration): [Circular],
          },
          "values": Map {
            "id" => 1,
            "title" => "Some category",
          },
        },
      }
    }
    key="0"
    settingsStore={
      SettingsStore {
        "rootStore": RootStore {
          "settingsStore": [Circular],
          "translationCategoryStore": TranslationCategoryStore {
            "create": [Function],
            "list": [Function],
            "rootStore": [Circular],
            "service": TranslationCategoryService {},
            "translationCategories": Array [
              Object {
                "id": 1,
                "title": "Some category",
                Symbol(mobx administration): ObservableObjectAdministration$$1 {
                  "defaultEnhancer": [Function],
                  "keysAtom": Atom$$1 {
                    "diffValue": 0,
                    "isBeingObserved": false,
                    "isPendingUnobservation": false,
                    "lastAccessedBy": 0,
                    "lowestObserverState": 2,
                    "name": "TranslationCategoryStore@2.translationCategories[..].keys",
                    "observers": Set {},
                  },
                  "name": "TranslationCategoryStore@2.translationCategories[..]",
                  "pendingKeys": Map {
                    "cheerio" => false,
                    "$$typeof" => false,
                    "nodeType" => false,
                    "@@__IMMUTABLE_ITERABLE__@@" => false,
                    "@@__IMMUTABLE_RECORD__@@" => false,
                    "_isMockFunction" => false,
                    "toJSON" => false,
                  },
                  "proxy": [Circular],
                  "target": Object {
                    "id": 1,
                    "title": "Some category",
                    Symbol(mobx administration): [Circular],
                  },
                  "values": Map {
                    "id" => 1,
                    "title" => "Some category",
                  },
                },
              },
            ],
            Symbol(mobx did run lazy initializers): true,
            Symbol(mobx administration): ObservableObjectAdministration$$1 {
              "defaultEnhancer": [Function],
              "keysAtom": Atom$$1 {
                "diffValue": 0,
                "isBeingObserved": false,
                "isPendingUnobservation": false,
                "lastAccessedBy": 0,
                "lowestObserverState": 2,
                "name": "TranslationCategoryStore@2.keys",
                "observers": Set {},
              },
              "name": "TranslationCategoryStore@2",
              "target": [Circular],
              "values": Map {
                "translationCategories" => Array [
                  Object {
                    "id": 1,
                    "title": "Some category",
                    Symbol(mobx administration): ObservableObjectAdministration$$1 {
                      "defaultEnhancer": [Function],
                      "keysAtom": Atom$$1 {
                        "diffValue": 0,
                        "isBeingObserved": false,
                        "isPendingUnobservation": false,
                        "lastAccessedBy": 0,
                        "lowestObserverState": 2,
                        "name": "TranslationCategoryStore@2.translationCategories[..].keys",
                        "observers": Set {},
                      },
                      "name": "TranslationCategoryStore@2.translationCategories[..]",
                      "pendingKeys": Map {
                        "cheerio" => false,
                        "$$typeof" => false,
                        "nodeType" => false,
                        "@@__IMMUTABLE_ITERABLE__@@" => false,
                        "@@__IMMUTABLE_RECORD__@@" => false,
                        "_isMockFunction" => false,
                        "toJSON" => false,
                      },
                      "proxy": [Circular],
                      "target": Object {
                        "id": 1,
                        "title": "Some category",
                        Symbol(mobx administration): [Circular],
                      },
                      "values": Map {
                        "id" => 1,
                        "title" => "Some category",
                      },
                    },
                  },
                ],
              },
            },
          },
          "translationStore": TranslationStore {
            "create": [Function],
            "delete": [Function],
            "list": [Function],
            "rootStore": [Circular],
            "service": TranslationService {},
            "translations": Array [],
            "update": [Function],
            Symbol(mobx did run lazy initializers): true,
            Symbol(mobx administration): ObservableObjectAdministration$$1 {
              "defaultEnhancer": [Function],
              "keysAtom": Atom$$1 {
                "diffValue": 0,
                "isBeingObserved": false,
                "isPendingUnobservation": false,
                "lastAccessedBy": 0,
                "lowestObserverState": 2,
                "name": "TranslationStore@3.keys",
                "observers": Set {},
              },
              "name": "TranslationStore@3",
              "target": [Circular],
              "values": Map {
                "translations" => Array [],
              },
            },
          },
        },
        "service": SettingsService {},
        "settings": Object {
          "native_lang": "",
          "translated_lang": "",
          Symbol(mobx administration): ObservableObjectAdministration$$1 {
            "defaultEnhancer": [Function],
            "keysAtom": Atom$$1 {
              "diffValue": 0,
              "isBeingObserved": false,
              "isPendingUnobservation": false,
              "lastAccessedBy": 0,
              "lowestObserverState": 2,
              "name": "SettingsStore@1.settings.keys",
              "observers": Set {},
            },
            "name": "SettingsStore@1.settings",
            "pendingKeys": Map {
              "cheerio" => false,
              "$$typeof" => false,
              "nodeType" => false,
              "@@__IMMUTABLE_ITERABLE__@@" => false,
              "@@__IMMUTABLE_RECORD__@@" => false,
              "_isMockFunction" => false,
              "toJSON" => false,
            },
            "proxy": [Circular],
            "target": Object {
              "native_lang": "",
              "translated_lang": "",
              Symbol(mobx administration): [Circular],
            },
            "values": Map {
              "native_lang" => "",
              "translated_lang" => "",
            },
          },
        },
        Symbol(mobx did run lazy initializers): true,
        Symbol(mobx administration): ObservableObjectAdministration$$1 {
          "defaultEnhancer": [Function],
          "keysAtom": Atom$$1 {
            "diffValue": 0,
            "isBeingObserved": false,
            "isPendingUnobservation": false,
            "lastAccessedBy": 0,
            "lowestObserverState": 2,
            "name": "SettingsStore@1.keys",
            "observers": Set {},
          },
          "name": "SettingsStore@1",
          "target": [Circular],
          "values": Map {
            "settings" => Object {
              "native_lang": "",
              "translated_lang": "",
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "SettingsStore@1.settings.keys",
                  "observers": Set {},
                },
                "name": "SettingsStore@1.settings",
                "pendingKeys": Map {
                  "cheerio" => false,
                  "$$typeof" => false,
                  "nodeType" => false,
                  "@@__IMMUTABLE_ITERABLE__@@" => false,
                  "@@__IMMUTABLE_RECORD__@@" => false,
                  "_isMockFunction" => false,
                  "toJSON" => false,
                },
                "proxy": [Circular],
                "target": Object {
                  "native_lang": "",
                  "translated_lang": "",
                  Symbol(mobx administration): [Circular],
                },
                "values": Map {
                  "native_lang" => "",
                  "translated_lang" => "",
                },
              },
            },
          },
        },
      }
    }
    translationStore={
      TranslationStore {
        "create": [Function],
        "delete": [Function],
        "list": [Function],
        "rootStore": RootStore {
          "settingsStore": SettingsStore {
            "rootStore": [Circular],
            "service": SettingsService {},
            "settings": Object {
              "native_lang": "",
              "translated_lang": "",
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "SettingsStore@1.settings.keys",
                  "observers": Set {},
                },
                "name": "SettingsStore@1.settings",
                "pendingKeys": Map {
                  "cheerio" => false,
                  "$$typeof" => false,
                  "nodeType" => false,
                  "@@__IMMUTABLE_ITERABLE__@@" => false,
                  "@@__IMMUTABLE_RECORD__@@" => false,
                  "_isMockFunction" => false,
                  "toJSON" => false,
                },
                "proxy": [Circular],
                "target": Object {
                  "native_lang": "",
                  "translated_lang": "",
                  Symbol(mobx administration): [Circular],
                },
                "values": Map {
                  "native_lang" => "",
                  "translated_lang" => "",
                },
              },
            },
            Symbol(mobx did run lazy initializers): true,
            Symbol(mobx administration): ObservableObjectAdministration$$1 {
              "defaultEnhancer": [Function],
              "keysAtom": Atom$$1 {
                "diffValue": 0,
                "isBeingObserved": false,
                "isPendingUnobservation": false,
                "lastAccessedBy": 0,
                "lowestObserverState": 2,
                "name": "SettingsStore@1.keys",
                "observers": Set {},
              },
              "name": "SettingsStore@1",
              "target": [Circular],
              "values": Map {
                "settings" => Object {
                  "native_lang": "",
                  "translated_lang": "",
                  Symbol(mobx administration): ObservableObjectAdministration$$1 {
                    "defaultEnhancer": [Function],
                    "keysAtom": Atom$$1 {
                      "diffValue": 0,
                      "isBeingObserved": false,
                      "isPendingUnobservation": false,
                      "lastAccessedBy": 0,
                      "lowestObserverState": 2,
                      "name": "SettingsStore@1.settings.keys",
                      "observers": Set {},
                    },
                    "name": "SettingsStore@1.settings",
                    "pendingKeys": Map {
                      "cheerio" => false,
                      "$$typeof" => false,
                      "nodeType" => false,
                      "@@__IMMUTABLE_ITERABLE__@@" => false,
                      "@@__IMMUTABLE_RECORD__@@" => false,
                      "_isMockFunction" => false,
                      "toJSON" => false,
                    },
                    "proxy": [Circular],
                    "target": Object {
                      "native_lang": "",
                      "translated_lang": "",
                      Symbol(mobx administration): [Circular],
                    },
                    "values": Map {
                      "native_lang" => "",
                      "translated_lang" => "",
                    },
                  },
                },
              },
            },
          },
          "translationCategoryStore": TranslationCategoryStore {
            "create": [Function],
            "list": [Function],
            "rootStore": [Circular],
            "service": TranslationCategoryService {},
            "translationCategories": Array [
              Object {
                "id": 1,
                "title": "Some category",
                Symbol(mobx administration): ObservableObjectAdministration$$1 {
                  "defaultEnhancer": [Function],
                  "keysAtom": Atom$$1 {
                    "diffValue": 0,
                    "isBeingObserved": false,
                    "isPendingUnobservation": false,
                    "lastAccessedBy": 0,
                    "lowestObserverState": 2,
                    "name": "TranslationCategoryStore@2.translationCategories[..].keys",
                    "observers": Set {},
                  },
                  "name": "TranslationCategoryStore@2.translationCategories[..]",
                  "pendingKeys": Map {
                    "cheerio" => false,
                    "$$typeof" => false,
                    "nodeType" => false,
                    "@@__IMMUTABLE_ITERABLE__@@" => false,
                    "@@__IMMUTABLE_RECORD__@@" => false,
                    "_isMockFunction" => false,
                    "toJSON" => false,
                  },
                  "proxy": [Circular],
                  "target": Object {
                    "id": 1,
                    "title": "Some category",
                    Symbol(mobx administration): [Circular],
                  },
                  "values": Map {
                    "id" => 1,
                    "title" => "Some category",
                  },
                },
              },
            ],
            Symbol(mobx did run lazy initializers): true,
            Symbol(mobx administration): ObservableObjectAdministration$$1 {
              "defaultEnhancer": [Function],
              "keysAtom": Atom$$1 {
                "diffValue": 0,
                "isBeingObserved": false,
                "isPendingUnobservation": false,
                "lastAccessedBy": 0,
                "lowestObserverState": 2,
                "name": "TranslationCategoryStore@2.keys",
                "observers": Set {},
              },
              "name": "TranslationCategoryStore@2",
              "target": [Circular],
              "values": Map {
                "translationCategories" => Array [
                  Object {
                    "id": 1,
                    "title": "Some category",
                    Symbol(mobx administration): ObservableObjectAdministration$$1 {
                      "defaultEnhancer": [Function],
                      "keysAtom": Atom$$1 {
                        "diffValue": 0,
                        "isBeingObserved": false,
                        "isPendingUnobservation": false,
                        "lastAccessedBy": 0,
                        "lowestObserverState": 2,
                        "name": "TranslationCategoryStore@2.translationCategories[..].keys",
                        "observers": Set {},
                      },
                      "name": "TranslationCategoryStore@2.translationCategories[..]",
                      "pendingKeys": Map {
                        "cheerio" => false,
                        "$$typeof" => false,
                        "nodeType" => false,
                        "@@__IMMUTABLE_ITERABLE__@@" => false,
                        "@@__IMMUTABLE_RECORD__@@" => false,
                        "_isMockFunction" => false,
                        "toJSON" => false,
                      },
                      "proxy": [Circular],
                      "target": Object {
                        "id": 1,
                        "title": "Some category",
                        Symbol(mobx administration): [Circular],
                      },
                      "values": Map {
                        "id" => 1,
                        "title" => "Some category",
                      },
                    },
                  },
                ],
              },
            },
          },
          "translationStore": [Circular],
        },
        "service": TranslationService {},
        "translations": Array [],
        "update": [Function],
        Symbol(mobx did run lazy initializers): true,
        Symbol(mobx administration): ObservableObjectAdministration$$1 {
          "defaultEnhancer": [Function],
          "keysAtom": Atom$$1 {
            "diffValue": 0,
            "isBeingObserved": false,
            "isPendingUnobservation": false,
            "lastAccessedBy": 0,
            "lowestObserverState": 2,
            "name": "TranslationStore@3.keys",
            "observers": Set {},
          },
          "name": "TranslationStore@3",
          "target": [Circular],
          "values": Map {
            "translations" => Array [],
          },
        },
      }
    }
  />
</main>
`;

exports[`TranslationLayout renders without crashing with only required props 1`] = `
<main
  className="l-translations undefined"
>
  <CategoryRow
    category={
      Object {
        "id": 1,
        "title": "Some category",
        Symbol(mobx administration): ObservableObjectAdministration$$1 {
          "defaultEnhancer": [Function],
          "keysAtom": Atom$$1 {
            "diffValue": 0,
            "isBeingObserved": false,
            "isPendingUnobservation": false,
            "lastAccessedBy": 0,
            "lowestObserverState": 2,
            "name": "TranslationCategoryStore@2.translationCategories[..].keys",
            "observers": Set {},
          },
          "name": "TranslationCategoryStore@2.translationCategories[..]",
          "pendingKeys": Map {
            "cheerio" => false,
            "$$typeof" => false,
            "nodeType" => false,
            "@@__IMMUTABLE_ITERABLE__@@" => false,
            "@@__IMMUTABLE_RECORD__@@" => false,
            "_isMockFunction" => false,
            "toJSON" => false,
          },
          "proxy": [Circular],
          "target": Object {
            "id": 1,
            "title": "Some category",
            Symbol(mobx administration): [Circular],
          },
          "values": Map {
            "id" => 1,
            "title" => "Some category",
          },
        },
      }
    }
    key="0"
    settingsStore={
      SettingsStore {
        "rootStore": RootStore {
          "settingsStore": [Circular],
          "translationCategoryStore": TranslationCategoryStore {
            "create": [Function],
            "list": [Function],
            "rootStore": [Circular],
            "service": TranslationCategoryService {},
            "translationCategories": Array [
              Object {
                "id": 1,
                "title": "Some category",
                Symbol(mobx administration): ObservableObjectAdministration$$1 {
                  "defaultEnhancer": [Function],
                  "keysAtom": Atom$$1 {
                    "diffValue": 0,
                    "isBeingObserved": false,
                    "isPendingUnobservation": false,
                    "lastAccessedBy": 0,
                    "lowestObserverState": 2,
                    "name": "TranslationCategoryStore@2.translationCategories[..].keys",
                    "observers": Set {},
                  },
                  "name": "TranslationCategoryStore@2.translationCategories[..]",
                  "pendingKeys": Map {
                    "cheerio" => false,
                    "$$typeof" => false,
                    "nodeType" => false,
                    "@@__IMMUTABLE_ITERABLE__@@" => false,
                    "@@__IMMUTABLE_RECORD__@@" => false,
                    "_isMockFunction" => false,
                    "toJSON" => false,
                  },
                  "proxy": [Circular],
                  "target": Object {
                    "id": 1,
                    "title": "Some category",
                    Symbol(mobx administration): [Circular],
                  },
                  "values": Map {
                    "id" => 1,
                    "title" => "Some category",
                  },
                },
              },
            ],
            Symbol(mobx did run lazy initializers): true,
            Symbol(mobx administration): ObservableObjectAdministration$$1 {
              "defaultEnhancer": [Function],
              "keysAtom": Atom$$1 {
                "diffValue": 0,
                "isBeingObserved": false,
                "isPendingUnobservation": false,
                "lastAccessedBy": 0,
                "lowestObserverState": 2,
                "name": "TranslationCategoryStore@2.keys",
                "observers": Set {},
              },
              "name": "TranslationCategoryStore@2",
              "target": [Circular],
              "values": Map {
                "translationCategories" => Array [
                  Object {
                    "id": 1,
                    "title": "Some category",
                    Symbol(mobx administration): ObservableObjectAdministration$$1 {
                      "defaultEnhancer": [Function],
                      "keysAtom": Atom$$1 {
                        "diffValue": 0,
                        "isBeingObserved": false,
                        "isPendingUnobservation": false,
                        "lastAccessedBy": 0,
                        "lowestObserverState": 2,
                        "name": "TranslationCategoryStore@2.translationCategories[..].keys",
                        "observers": Set {},
                      },
                      "name": "TranslationCategoryStore@2.translationCategories[..]",
                      "pendingKeys": Map {
                        "cheerio" => false,
                        "$$typeof" => false,
                        "nodeType" => false,
                        "@@__IMMUTABLE_ITERABLE__@@" => false,
                        "@@__IMMUTABLE_RECORD__@@" => false,
                        "_isMockFunction" => false,
                        "toJSON" => false,
                      },
                      "proxy": [Circular],
                      "target": Object {
                        "id": 1,
                        "title": "Some category",
                        Symbol(mobx administration): [Circular],
                      },
                      "values": Map {
                        "id" => 1,
                        "title" => "Some category",
                      },
                    },
                  },
                ],
              },
            },
          },
          "translationStore": TranslationStore {
            "create": [Function],
            "delete": [Function],
            "list": [Function],
            "rootStore": [Circular],
            "service": TranslationService {},
            "translations": Array [],
            "update": [Function],
            Symbol(mobx did run lazy initializers): true,
            Symbol(mobx administration): ObservableObjectAdministration$$1 {
              "defaultEnhancer": [Function],
              "keysAtom": Atom$$1 {
                "diffValue": 0,
                "isBeingObserved": false,
                "isPendingUnobservation": false,
                "lastAccessedBy": 0,
                "lowestObserverState": 2,
                "name": "TranslationStore@3.keys",
                "observers": Set {},
              },
              "name": "TranslationStore@3",
              "target": [Circular],
              "values": Map {
                "translations" => Array [],
              },
            },
          },
        },
        "service": SettingsService {},
        "settings": Object {
          "native_lang": "",
          "translated_lang": "",
          Symbol(mobx administration): ObservableObjectAdministration$$1 {
            "defaultEnhancer": [Function],
            "keysAtom": Atom$$1 {
              "diffValue": 0,
              "isBeingObserved": false,
              "isPendingUnobservation": false,
              "lastAccessedBy": 0,
              "lowestObserverState": 2,
              "name": "SettingsStore@1.settings.keys",
              "observers": Set {},
            },
            "name": "SettingsStore@1.settings",
            "pendingKeys": Map {
              "cheerio" => false,
              "$$typeof" => false,
              "nodeType" => false,
              "@@__IMMUTABLE_ITERABLE__@@" => false,
              "@@__IMMUTABLE_RECORD__@@" => false,
              "_isMockFunction" => false,
              "toJSON" => false,
            },
            "proxy": [Circular],
            "target": Object {
              "native_lang": "",
              "translated_lang": "",
              Symbol(mobx administration): [Circular],
            },
            "values": Map {
              "native_lang" => "",
              "translated_lang" => "",
            },
          },
        },
        Symbol(mobx did run lazy initializers): true,
        Symbol(mobx administration): ObservableObjectAdministration$$1 {
          "defaultEnhancer": [Function],
          "keysAtom": Atom$$1 {
            "diffValue": 0,
            "isBeingObserved": false,
            "isPendingUnobservation": false,
            "lastAccessedBy": 0,
            "lowestObserverState": 2,
            "name": "SettingsStore@1.keys",
            "observers": Set {},
          },
          "name": "SettingsStore@1",
          "target": [Circular],
          "values": Map {
            "settings" => Object {
              "native_lang": "",
              "translated_lang": "",
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "SettingsStore@1.settings.keys",
                  "observers": Set {},
                },
                "name": "SettingsStore@1.settings",
                "pendingKeys": Map {
                  "cheerio" => false,
                  "$$typeof" => false,
                  "nodeType" => false,
                  "@@__IMMUTABLE_ITERABLE__@@" => false,
                  "@@__IMMUTABLE_RECORD__@@" => false,
                  "_isMockFunction" => false,
                  "toJSON" => false,
                },
                "proxy": [Circular],
                "target": Object {
                  "native_lang": "",
                  "translated_lang": "",
                  Symbol(mobx administration): [Circular],
                },
                "values": Map {
                  "native_lang" => "",
                  "translated_lang" => "",
                },
              },
            },
          },
        },
      }
    }
    translationStore={
      TranslationStore {
        "create": [Function],
        "delete": [Function],
        "list": [Function],
        "rootStore": RootStore {
          "settingsStore": SettingsStore {
            "rootStore": [Circular],
            "service": SettingsService {},
            "settings": Object {
              "native_lang": "",
              "translated_lang": "",
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "SettingsStore@1.settings.keys",
                  "observers": Set {},
                },
                "name": "SettingsStore@1.settings",
                "pendingKeys": Map {
                  "cheerio" => false,
                  "$$typeof" => false,
                  "nodeType" => false,
                  "@@__IMMUTABLE_ITERABLE__@@" => false,
                  "@@__IMMUTABLE_RECORD__@@" => false,
                  "_isMockFunction" => false,
                  "toJSON" => false,
                },
                "proxy": [Circular],
                "target": Object {
                  "native_lang": "",
                  "translated_lang": "",
                  Symbol(mobx administration): [Circular],
                },
                "values": Map {
                  "native_lang" => "",
                  "translated_lang" => "",
                },
              },
            },
            Symbol(mobx did run lazy initializers): true,
            Symbol(mobx administration): ObservableObjectAdministration$$1 {
              "defaultEnhancer": [Function],
              "keysAtom": Atom$$1 {
                "diffValue": 0,
                "isBeingObserved": false,
                "isPendingUnobservation": false,
                "lastAccessedBy": 0,
                "lowestObserverState": 2,
                "name": "SettingsStore@1.keys",
                "observers": Set {},
              },
              "name": "SettingsStore@1",
              "target": [Circular],
              "values": Map {
                "settings" => Object {
                  "native_lang": "",
                  "translated_lang": "",
                  Symbol(mobx administration): ObservableObjectAdministration$$1 {
                    "defaultEnhancer": [Function],
                    "keysAtom": Atom$$1 {
                      "diffValue": 0,
                      "isBeingObserved": false,
                      "isPendingUnobservation": false,
                      "lastAccessedBy": 0,
                      "lowestObserverState": 2,
                      "name": "SettingsStore@1.settings.keys",
                      "observers": Set {},
                    },
                    "name": "SettingsStore@1.settings",
                    "pendingKeys": Map {
                      "cheerio" => false,
                      "$$typeof" => false,
                      "nodeType" => false,
                      "@@__IMMUTABLE_ITERABLE__@@" => false,
                      "@@__IMMUTABLE_RECORD__@@" => false,
                      "_isMockFunction" => false,
                      "toJSON" => false,
                    },
                    "proxy": [Circular],
                    "target": Object {
                      "native_lang": "",
                      "translated_lang": "",
                      Symbol(mobx administration): [Circular],
                    },
                    "values": Map {
                      "native_lang" => "",
                      "translated_lang" => "",
                    },
                  },
                },
              },
            },
          },
          "translationCategoryStore": TranslationCategoryStore {
            "create": [Function],
            "list": [Function],
            "rootStore": [Circular],
            "service": TranslationCategoryService {},
            "translationCategories": Array [
              Object {
                "id": 1,
                "title": "Some category",
                Symbol(mobx administration): ObservableObjectAdministration$$1 {
                  "defaultEnhancer": [Function],
                  "keysAtom": Atom$$1 {
                    "diffValue": 0,
                    "isBeingObserved": false,
                    "isPendingUnobservation": false,
                    "lastAccessedBy": 0,
                    "lowestObserverState": 2,
                    "name": "TranslationCategoryStore@2.translationCategories[..].keys",
                    "observers": Set {},
                  },
                  "name": "TranslationCategoryStore@2.translationCategories[..]",
                  "pendingKeys": Map {
                    "cheerio" => false,
                    "$$typeof" => false,
                    "nodeType" => false,
                    "@@__IMMUTABLE_ITERABLE__@@" => false,
                    "@@__IMMUTABLE_RECORD__@@" => false,
                    "_isMockFunction" => false,
                    "toJSON" => false,
                  },
                  "proxy": [Circular],
                  "target": Object {
                    "id": 1,
                    "title": "Some category",
                    Symbol(mobx administration): [Circular],
                  },
                  "values": Map {
                    "id" => 1,
                    "title" => "Some category",
                  },
                },
              },
            ],
            Symbol(mobx did run lazy initializers): true,
            Symbol(mobx administration): ObservableObjectAdministration$$1 {
              "defaultEnhancer": [Function],
              "keysAtom": Atom$$1 {
                "diffValue": 0,
                "isBeingObserved": false,
                "isPendingUnobservation": false,
                "lastAccessedBy": 0,
                "lowestObserverState": 2,
                "name": "TranslationCategoryStore@2.keys",
                "observers": Set {},
              },
              "name": "TranslationCategoryStore@2",
              "target": [Circular],
              "values": Map {
                "translationCategories" => Array [
                  Object {
                    "id": 1,
                    "title": "Some category",
                    Symbol(mobx administration): ObservableObjectAdministration$$1 {
                      "defaultEnhancer": [Function],
                      "keysAtom": Atom$$1 {
                        "diffValue": 0,
                        "isBeingObserved": false,
                        "isPendingUnobservation": false,
                        "lastAccessedBy": 0,
                        "lowestObserverState": 2,
                        "name": "TranslationCategoryStore@2.translationCategories[..].keys",
                        "observers": Set {},
                      },
                      "name": "TranslationCategoryStore@2.translationCategories[..]",
                      "pendingKeys": Map {
                        "cheerio" => false,
                        "$$typeof" => false,
                        "nodeType" => false,
                        "@@__IMMUTABLE_ITERABLE__@@" => false,
                        "@@__IMMUTABLE_RECORD__@@" => false,
                        "_isMockFunction" => false,
                        "toJSON" => false,
                      },
                      "proxy": [Circular],
                      "target": Object {
                        "id": 1,
                        "title": "Some category",
                        Symbol(mobx administration): [Circular],
                      },
                      "values": Map {
                        "id" => 1,
                        "title" => "Some category",
                      },
                    },
                  },
                ],
              },
            },
          },
          "translationStore": [Circular],
        },
        "service": TranslationService {},
        "translations": Array [],
        "update": [Function],
        Symbol(mobx did run lazy initializers): true,
        Symbol(mobx administration): ObservableObjectAdministration$$1 {
          "defaultEnhancer": [Function],
          "keysAtom": Atom$$1 {
            "diffValue": 0,
            "isBeingObserved": false,
            "isPendingUnobservation": false,
            "lastAccessedBy": 0,
            "lowestObserverState": 2,
            "name": "TranslationStore@3.keys",
            "observers": Set {},
          },
          "name": "TranslationStore@3",
          "target": [Circular],
          "values": Map {
            "translations" => Array [],
          },
        },
      }
    }
  />
</main>
`;
